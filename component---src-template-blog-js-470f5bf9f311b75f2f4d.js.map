{"version":3,"sources":["webpack:///./src/template/blog.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","BlogTemplate","_ref","_ref$data","data","site","post","markdownRemark","a","createElement","style","maxWidth","margin","console","log","frontmatter","img","htmlAttributes","lang","title","siteMetadata","meta","name","content","author","excerpt","childImageSharp","resize","src","fontSize","to","opacity","marginBottom","date","dangerouslySetInnerHTML","__html","html","onClick","window","scrollTo"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,IA0CeW,UAtCM,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,KAAQC,EAAXF,EAAWE,KAAsBC,EAAjCH,EAAiBI,eAAjB,OACnBX,EAAAY,EAAAC,cAAA,WAASC,MAAO,CAAEC,SAAU,QAASC,OAAQ,WAC1CC,QAAQC,IAAIR,EAAKS,YAAYC,KAC9BpB,EAAAY,EAAAC,cAACV,EAAAS,EAAD,CACES,eAAgB,CAAEC,KAAM,MACxBC,MAAUb,EAAKS,YAAYI,MAAtB,MAAiCd,EAAKe,aAAaD,MACxDE,KAAM,CACJ,CAAEC,KAAM,SAAUC,QAASlB,EAAKe,aAAaI,QAC7C,CAAEF,KAAM,cAAeC,QAASjB,EAAKmB,SACrC,CAAEH,KAAM,WAAYC,QAASjB,EAAKS,YAAYI,OAC9C,CACEG,KAAM,WACNC,QAASjB,EAAKS,YAAYC,IAAIU,gBAAgBC,OAAOC,QAI3DhC,EAAAY,EAAAC,cAAA,OAAKC,MAAO,CAAEE,OAAQ,oBACpBhB,EAAAY,EAAAC,cAACT,EAAA,KAAD,CAAMU,MAAO,CAAEmB,SAAU,QAAUC,GAAG,KAAtC,QAGAlC,EAAAY,EAAAC,cAAA,MAAIC,MAAO,CAAEE,OAAQ,cAAgBN,EAAKS,YAAYI,OACtDvB,EAAAY,EAAAC,cAAA,KAAGC,MAAO,CAAEqB,QAAS,MAAOC,aAAc,OAAQH,SAAU,QACzDvB,EAAKS,YAAYkB,MAEpBrC,EAAAY,EAAAC,cAAA,WACAb,EAAAY,EAAAC,cAAA,OAAKyB,wBAAyB,CAAEC,OAAQ7B,EAAK8B,QAC7CxC,EAAAY,EAAAC,cAAA,WACAb,EAAAY,EAAAC,cAAA,KACE4B,QAAS,WACPC,OAAOC,SAAS,EAAG,KAFvB,iBAaC,IAAM7C,EAAS","file":"component---src-template-blog-js-470f5bf9f311b75f2f4d.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\n\nconst BlogTemplate = ({ data: { site, markdownRemark: post } }) => (\n  <section style={{ maxWidth: '800px', margin: '0 auto' }}>\n    {console.log(post.frontmatter.img)}\n    <Helmet\n      htmlAttributes={{ lang: 'th' }}\n      title={`${post.frontmatter.title} | ${site.siteMetadata.title}`}\n      meta={[\n        { name: 'author', content: site.siteMetadata.author },\n        { name: 'description', content: post.excerpt },\n        { name: 'og:title', content: post.frontmatter.title },\n        {\n          name: 'og:image',\n          content: post.frontmatter.img.childImageSharp.resize.src,\n        },\n      ]}\n    />\n    <div style={{ margin: '1.25rem 1.75rem' }}>\n      <Link style={{ fontSize: '1rem' }} to=\"/\">\n        Back\n      </Link>\n      <h1 style={{ margin: '1.35rem 0' }}>{post.frontmatter.title}</h1>\n      <p style={{ opacity: '0.5', marginBottom: '1rem', fontSize: '75%' }}>\n        {post.frontmatter.date}\n      </p>\n      <hr />\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      <hr />\n      <a\n        onClick={() => {\n          window.scrollTo(0, 0)\n        }}\n      >\n        To the top\n      </a>\n    </div>\n  </section>\n)\n\nexport default BlogTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostByPath($path: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n        date(formatString: \"DD MMMM, YYYY\")\n        img {\n          childImageSharp {\n            resize(width: 200, height: 200) {\n              src\n            }\n            fluid(maxWidth: 450) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}